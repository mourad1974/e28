{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/eslint-loader/index.js??ref--13-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/Cart.js","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/Cart.js","mtime":1573841788000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9BcHBsaWNhdGlvbnMvWEFNUFAveGFtcHBmaWxlcy9odGRvY3MvZTI4L3AzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvQXBwbGljYXRpb25zL1hBTVBQL3hhbXBwZmlsZXMvaHRkb2NzL2UyOC9wMy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgovLyAvc3JjL0NhcnQuanMKdmFyIENhcnQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICAvKioKICAgKgogICAqLwogIGZ1bmN0aW9uIENhcnQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FydCk7CgogICAgLy8gRXh0cmFjdCBKU09OIGNhcnQgc3RyaW5nIGZyb20gbG9jYWwgc3RvcmFnZQogICAgdmFyIGNhcnQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2FydCcpOyAvLyBQYXJzZSBKU09OIGNhcnQgU3RyaW5nIHRvIGBpdGVtc2Agb2JqZWN0CgogICAgdGhpcy5pdGVtcyA9IGNhcnQgPyBKU09OLnBhcnNlKGNhcnQpIDogW107CiAgfQogIC8qKgogICAqIEdldHRlciBtZXRob2QgZm9yIGl0ZW1zCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoQ2FydCwgW3sKICAgIGtleTogImdldEl0ZW1zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJdGVtcygpIHsKICAgICAgcmV0dXJuIHRoaXMuaXRlbXM7CiAgICB9CiAgICAvKioKICAgICAqIFJldHVybnMgaG93IG1hbnkgdG90YWwgaXRlbXMgYXJlIGluIHRoZSBjYXJ0CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiY291bnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvdW50KCkgewogICAgICB2YXIgc3VtID0gMDsKCiAgICAgIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXModGhpcy5pdGVtcyk7IF9pIDwgX09iamVjdCRrZXlzLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBrZXkgPSBfT2JqZWN0JGtleXNbX2ldOwogICAgICAgIHN1bSArPSB0aGlzLml0ZW1zW2tleV0ucXVhbnRpdHk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzdW07CiAgICB9CiAgICAvKioKICAgICAqIFVwZGF0ZXMgY2FydCBpbiBsb2NhbHN0b3JhZ2UKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NhcnQnLCBKU09OLnN0cmluZ2lmeSh0aGlzLml0ZW1zKSk7CiAgICB9CiAgICAvKioKICAgICAqIEFkZCBhIG5ldyBpdGVtIG9mIHRoZSBnaXZlbiBwcm9kdWN0SWQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhZGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZChwcm9kdWN0SWQpIHsKICAgICAgdmFyIHF1YW50aXR5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAxOwogICAgICAvLyBGaXJzdCBzZWUgaWYgcHJvZHVjdCBpcyBhbHJlYWR5IHByZXNlbnQKICAgICAgdmFyIGl0ZW0gPSB0aGlzLmdldEl0ZW0ocHJvZHVjdElkKTsKCiAgICAgIGlmIChpdGVtKSB7CiAgICAgICAgLy8gUHJvZHVjdCBpcyBpbiBjYXJ0IGFscmVhZHk7IGluY3JlbWVudCBxdWFudGl0eSBieSAxCiAgICAgICAgaXRlbS5xdWFudGl0eSArPSBxdWFudGl0eTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBQcm9kdWN0IG5vdCBpbiBjYXJ0LCBhZGQgYXMgbmV3IGl0ZW0KICAgICAgICB0aGlzLml0ZW1zLnB1c2goewogICAgICAgICAgaWQ6IHByb2R1Y3RJZCwKICAgICAgICAgIHF1YW50aXR5OiBxdWFudGl0eQogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfQogICAgLyoqCiAgICAgKiBSZW1vdmUgYW4gaXRlbSBmcm9tIGl0ZW1zIHZpYSBwcm9kdWN0SWQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShwcm9kdWN0SWQpIHsKICAgICAgdmFyIGl0ZW0gPSB0aGlzLmdldEl0ZW0ocHJvZHVjdElkKTsKICAgICAgdmFyIGl0ZW1JbmRleCA9IHRoaXMuaXRlbXMuaW5kZXhPZihpdGVtKTsKCiAgICAgIGlmIChpdGVtKSB7CiAgICAgICAgdGhpcy5pdGVtcy5zcGxpY2UoaXRlbUluZGV4LCAxKTsKICAgICAgICB0aGlzLnVwZGF0ZSgpOwogICAgICB9CiAgICB9CiAgICAvKioKICAgICAqIEdldCBhbiBpdGVtIGZyb20gaXRlbXMgdmlhIHByb2R1Y3RJZAogICAgICogUmV0dXJucyBudWxsIGlmIHByb2R1Y3QgZG9lcyBub3QgZXhpc3QgaW4gaXRlbXMKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRJdGVtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJdGVtKHByb2R1Y3RJZCkgewogICAgICByZXR1cm4gdGhpcy5pdGVtcy5maW5kKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGlkID0gX3JlZi5pZDsKICAgICAgICByZXR1cm4gaWQgPT09IHByb2R1Y3RJZDsKICAgICAgfSkgfHwgbnVsbDsKICAgIH0KICB9XSk7CgogIHJldHVybiBDYXJ0Owp9KCk7CgpleHBvcnQgeyBDYXJ0IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/Cart.js"],"names":["Cart","cart","localStorage","getItem","items","JSON","parse","sum","Object","keys","key","quantity","setItem","stringify","productId","item","push","id","update","itemIndex","indexOf","splice","find"],"mappings":";;;;;;;AAAA;IACqBA,I;;;AACnB;;;AAGA,kBAAc;AAAA;;AACZ;AACA,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAFY,CAIZ;;AACA,SAAKC,KAAL,GAAaH,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsB,EAAvC;AACD;AAED;;;;;;;+BAGW;AACT,aAAO,KAAKG,KAAZ;AACD;AAED;;;;;;4BAGQ;AACN,UAAIG,GAAG,GAAG,CAAV;;AACA,sCAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAjB,CAAhB,kCAAyC;AAApC,YAAIM,GAAG,mBAAP;AACHH,QAAAA,GAAG,IAAI,KAAKH,KAAL,CAAWM,GAAX,EAAgBC,QAAvB;AACD;;AACD,aAAOJ,GAAP;AACD;AAED;;;;;;6BAGS;AACPL,MAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe,KAAKT,KAApB,CAA7B;AACD;AAED;;;;;;wBAGIU,S,EAAyB;AAAA,UAAdH,QAAc,uEAAH,CAAG;AAC3B;AACA,UAAII,IAAI,GAAG,KAAKZ,OAAL,CAAaW,SAAb,CAAX;;AAEA,UAAIC,IAAJ,EAAU;AACR;AACAA,QAAAA,IAAI,CAACJ,QAAL,IAAiBA,QAAjB;AACD,OAHD,MAGO;AACL;AACA,aAAKP,KAAL,CAAWY,IAAX,CAAgB;AACdC,UAAAA,EAAE,EAAEH,SADU;AAEdH,UAAAA,QAAQ,EAAEA;AAFI,SAAhB;AAID;;AAED,WAAKO,MAAL;AACD;AAED;;;;;;2BAGOJ,S,EAAW;AAChB,UAAIC,IAAI,GAAG,KAAKZ,OAAL,CAAaW,SAAb,CAAX;AAEA,UAAIK,SAAS,GAAG,KAAKf,KAAL,CAAWgB,OAAX,CAAmBL,IAAnB,CAAhB;;AAEA,UAAIA,IAAJ,EAAU;AACR,aAAKX,KAAL,CAAWiB,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,aAAKD,MAAL;AACD;AACF;AAED;;;;;;;4BAIQJ,S,EAAW;AACjB,aAAO,KAAKV,KAAL,CAAWkB,IAAX,CAAgB;AAAA,YAAGL,EAAH,QAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKH,SAAnB;AAAA,OAAhB,KAAiD,IAAxD;AACD;;;;;;SA9EkBd,I","sourcesContent":["// /src/Cart.js\nexport default class Cart {\n  /**\n   *\n   */\n  constructor() {\n    // Extract JSON cart string from local storage\n    let cart = localStorage.getItem('cart');\n\n    // Parse JSON cart String to `items` object\n    this.items = cart ? JSON.parse(cart) : [];\n  }\n\n  /**\n   * Getter method for items\n   */\n  getItems() {\n    return this.items;\n  }\n\n  /**\n   * Returns how many total items are in the cart\n   */\n  count() {\n    let sum = 0;\n    for (let key of Object.keys(this.items)) {\n      sum += this.items[key].quantity;\n    }\n    return sum;\n  }\n\n  /**\n   * Updates cart in localstorage\n   */\n  update() {\n    localStorage.setItem('cart', JSON.stringify(this.items));\n  }\n\n  /**\n   * Add a new item of the given productId\n   */\n  add(productId, quantity = 1) {\n    // First see if product is already present\n    let item = this.getItem(productId);\n\n    if (item) {\n      // Product is in cart already; increment quantity by 1\n      item.quantity += quantity;\n    } else {\n      // Product not in cart, add as new item\n      this.items.push({\n        id: productId,\n        quantity: quantity\n      });\n    }\n\n    this.update();\n  }\n\n  /**\n   * Remove an item from items via productId\n   */\n  remove(productId) {\n    let item = this.getItem(productId);\n\n    let itemIndex = this.items.indexOf(item);\n\n    if (item) {\n      this.items.splice(itemIndex, 1);\n      this.update();\n    }\n  }\n\n  /**\n   * Get an item from items via productId\n   * Returns null if product does not exist in items\n   */\n  getItem(productId) {\n    return this.items.find(({ id }) => id === productId) || null;\n  }\n}\n"]}]}